Git

intialize the repository:
git init

(git config --global user.name "Your name"/ user.email "email@example.com"

add file to the Git repository:
git add <file> (can be repeated, can add multiple files)
git commit -m "(note)"

workspace status:
git status

view difference
git diff

HEAD represents the current version, to change the version
git reset --hard commit_id(HEAD^ represents the last version)

view the commit history
git log

view the command history
git reflog

modify
git checkout --file  git reset HEAD file

delete
git rm

associate the Github
git remote add origin git@server-name:path/repo-name.git

Push all the contents of the master branch for the first time
git push -u origin master

Push the latest changes
git push origin master

解决`向github提交代码是老要输入用户名密码
在命令行输入命令:git config --global credential.helper store
这一步会在用户目录下的.gitconfig文件最后添加: 
[credential]
     helper = store

Git鼓励大量使用分支：
查看分支：git branch
创建分支：git branch <name>
切换分支：git checkout <name>
创建+切换分支：git checkout -b <name>
合并某分支到当前分支：git merge <name>
删除分支：git branch -d <name>

当Git无法自动合并分支时，就必须首先解决冲突。解决冲突后，再提交，合并完成。
用git log --graph命令可以看到分支合并图。
合并分支时，加上--no-ff参数就可以用普通模式合并，合并后的历史有分支，能看出来曾经做过合并，而fast forward合并就看不出来曾经做过合并。
当手头工作没有完成时，先把工作现场git stash一下，然后去修复bug，修复后，再git stash pop(or git stash apply & git stash drop)，回到工作现场。
如果要丢弃一个没有被合并过的分支，可以通过git branch -D <name>强行删除。



命令git tag <name>用于新建一个标签，默认为HEAD，也可以指定一个commit id(git tag v0.9 6224937) ；
找历史提交的commit id:git log --pretty=oneline --abbrev-commit；
可以用git show <tagname>查看标签信息；
git tag -a <tagname> -m "blablabla..."可以指定标签信息；
命令git tag可以查看所有标签。
如果要推送某个标签到远程，使用命令git push origin <tagname>
一次性推送全部尚未推送到远程的本地标签：git push origin --tags
如果标签已经推送到远程，要删除远程标签就麻烦一点，先从本地删除：git tag -d v0.9
然后，从远程删除。删除命令也是push，但是格式如下：git push origin :refs/tags/v0.9



